@model BookManagementSystem_BMS.ViewModels.BookViewModel
@{
    ViewData["Title"] = "Home";
}

<div style="display: flex; flex-direction: column; height: 100vh;">
    <div style="flex: 1; display: flex; border:10px;" class="border">
        <div style="flex: 1; padding: 10px;" class="border">
            <h2>Categories</h2>
            <ul>
                @foreach (var category in Model.AllCategories)
                {
                    <li>
                        <a href="@Url.Action("Details", new { categoryId = category.CategoryID })">
                            @category.CategoryName
                        </a>
                    </li>
                }
            </ul>
        </div>
        <div style="flex: 1; padding: 10px;" class="border">
            <h4>Books</h4>
            <div class="form-group">
                <label for="selectedBook">Select Book:</label>
                @Html.DropDownListFor(model => model.SelectedBookId, new SelectList(Model.Books,
                "BookID", "BookName"), "-- Select a Book --", new { id = "selectedBook",
                @class = "form-control", onchange="loadChapters()",})

            </div>
            <div class="form-group">
                <div id="chapters">
                    <h4>Chapters</h4>
                    <div >
                        <label for="selectedChapter">Select Chapter:</label>
                        <select>
                            <option value="" >--- Select Chapter ---</option>
                        </select>
                    </div>
                </div>
                <button class="btn btn-primary" type="submit" onclick="loadOverview()">Submit</button>
            </div>
        </div>
    </div>
    <div style="flex: 1; padding: 10px;" class="border">
        <h2>Random Book Images</h2>
        @foreach (var coverpage in Model.CoverPages)
        {
            <div class="d-inline-flex m-2 border border-primary">
                <a href="@Url.Action("BookOverviewByCover", new { bookId = coverpage.BookId, categoryId=coverpage.CategoryId, chapterId=1, home=-1})">
                    <img src="data:image/jpg;base64, @Convert.ToBase64String(@coverpage.ImageContent)" alt="@coverpage.BookName" width="150" height="200" />
                </a>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var val = '@ViewBag.LoggedIn';
            if (val === "loggedin") {
                console.log('logout')
                $('#loginButton').hide();
            }
            else {
                console.log('login')
                $('#logoutButton').hide();
            }
        });
        function loadChapters() {
            console.log("load chapters")
            let bookId = $("#selectedBook").val();
            if (bookId !== "") {
                $.ajax({
                    url: '@Url.Action("GetChaptersByBook")',
                    type: 'GET',
                    data: { bookId: bookId, chapterId: @Model.SelectedChapterId },
                    success: function (result) {
                        $("#chapters").html(result);
                    },
                    error: function () {
                        alert("An error occurred while loading chapters.");
                    }
                });
            }
            else {
                $("#chapters").html("<option value=''>Select a book first</option>");
            }
        }
        function loadOverview() {
            console.log("Load Content")
            let bookId = $("#selectedBook").val();
            let chapterId = $("#selectedChapter").val();
            if (bookId !== "" && chapterId !== "") {
                $.ajax({
                    url: '@Url.Action("BookOverviewByCover")',
                    type: 'GET',
                    data: { bookId: bookId, categoryId:-1, chapterId: chapterId, home:1},
                    success: function (result) {
                        $("#mainContainer").html(result);
                    },
                    error: function () {
                        alert("An error occurred while loading chapters.");
                    }
                });
            }
            else {
                $("#chapters").html("<option value=''>Select a book first</option>");
            }
        }

    </script>
}